version: '2'

services:

### Applications Code Container #############################

    applications:
        image: tianon/true
        volumes:
            - ${APPLICATION_GUEST}:/var/www/${APPLICATION_HOST}

### Workspace Utilities Container ###########################

    workspace:
        build:
            context: ./Docker/workspace
            args:                
                - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
                - INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}
                - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
                - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
                - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
                - INSTALL_DRUSH=${WORKSPACE_INSTALL_DRUSH}
                - INSTALL_AEROSPIKE_EXTENSION=${WORKSPACE_INSTALL_AEROSPIKE_EXTENSION}
                - INSTALL_V8JS_EXTENSION=${WORKSPACE_INSTALL_INSTALL_V8JS_EXTENSION}
                - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
                - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}
                - INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}
                - INSTALL_DEPLOYER=${WORKSPACE_INSTALL_LARAVEL_ENVOY}
                - INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LARAVEL_ENVOY}
                - INSTALL_MC=${WORKSPACE_INSTALL_MC}
                - PUID=${WORKSPACE_PUID}
                - PGID=${WORKSPACE_PGID}
                - NODE_VERSION=${WORKSPACE_NODE_VERSION}
                - YARN_VERSION=${WORKSPACE_TIMEZONE}
                - TZ=${WORKSPACE_TIMEZONE}
        volumes_from:
            - applications
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
        ports:
           - "${WORKSPACE_SSH_PORT}:22"
        tty: true

### PHP-FPM Container #######################################

    php-fpm:
        build:
            context: ./Docker/php-fpm
            args:
                - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
                - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
                - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
                - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
                - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
                - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
                - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
                - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
                - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
                - INSTALL_AEROSPIKE_EXTENSION=${PHP_FPM_INSTALL_AEROSPIKE_EXTENSION}                
                - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
                - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
                - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
            dockerfile: ${PHP_FPM_DOCKER_FILE}
        volumes_from:
            - applications
        expose:
            - "9000"
        links:
            - workspace
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
        environment:
            - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}

### Nginx Server Container ##################################

    nginx:
        build:
            context: ./Docker/nginx
            args:
                - PHP_UPSTREAM=php-fpm
        volumes_from:
            - applications
        volumes:
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
        ports:
            - "${NGINX_HOST_HTTP_PORT}:80"
            - "${NGINX_HOST_HTTPS_PORT}:443"
        links:
            - php-fpm

### HHVM Container ##########################################

    hhvm:
        build: ./Docker/hhvm
        volumes_from:
            - applications
        expose:
            - "9000"
        links:
            - workspace

### MySQL Container #########################################

    mysql:
        build:
            context: ./Docker/mysql
            args:
                - MYSQL_DATABASE=${MYSQL_DATABASE}
                - MYSQL_USER=${MYSQL_USER}
                - MYSQL_PASSWORD=${MYSQL_PASSWORD}
                - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - mysql:/var/lib/mysql
        ports:
            - "${MYSQL_PORT}:3306"

### MongoDB Container #######################################

    mongo:
        build: ./Docker/mongo
        ports:
            - "27017:27017"
        volumes:
            - mongo:/data/db

### Redis Container #########################################

    redis:
        build: ./Docker/redis
        volumes:
            - redis:/data
        ports:
            - "6379:6379"

### Memcached Container #####################################

    memcached:
        build: ./Docker/memcached
        volumes:
            - memcached:/var/lib/memcached
        ports:
            - "11211:11211"
        links:
            - php-fpm

### Beanstalkd Container ####################################

    beanstalkd:
        build: ./Docker/beanstalkd
        ports:
            - "11300:11300"
        privileged: true
        links:
            - php-fpm

### RabbitMQ Container ######################################

    rabbitmq:
        build: ./Docker/rabbitmq
        ports:
            - "5672:5672"
            - "15671:15671"
            - "8080:15672"
        privileged: true
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASS: guest
        links:
            - php-fpm

### Beanstalkd Console Container ############################

    beanstalkd-console:
        build: ./Docker/beanstalkd-console
        ports:
            - "2080:2080"
        links:
            - beanstalkd

### ElasticSearch Container #################################

    elasticsearch:
        build: ./Docker/elasticsearch
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
            - elasticsearch-plugins:/usr/share/elasticsearch/data
        ports:
            - "9200:9200"
            - "9300:9300"
        links:
            - php-fpm

### Selenium Container #########################################

    selenium:
        build: ./Docker/selenium
        ports:
            - "4444:4444"
        volumes:
            # see https://github.com/SeleniumHQ/docker-selenium#running-the-images
            - /dev/shm:/dev/shm

### Volumes Setup ###########################################

volumes:
    mysql:
        driver: "local"
    memcached:
        driver: "local"
    redis:
        driver: "local"
    mongo:
        driver: "local"
    elasticsearch-data:
        driver: "local"
    elasticsearch-plugins:
        driver: "local"
    sessions:    ## nothing is connected to this (- ./data/sessions:/sessions)
        driver: "local"